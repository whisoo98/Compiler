Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | func_declaration

    6 var_declaration: type_specifier id SEMI
    7                | type_specifier id LBRACE num RBRACE SEMI

    8 type_specifier: INT
    9               | VOID

   10 func_declaration: type_specifier id LPAREN params RPAREN compound_stmt

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_specifier id
   16      | type_specifier id LBRACE RBRACE

   17 compound_stmt: lcurly local_declarations statement_list RCURLY

   18 local_declarations: local_declarations var_declaration
   19                   | %empty

   20 statement_list: statement_list statement
   21               | %empty

   22 statement: expression_stmt
   23          | compound_stmt
   24          | selection_stmt
   25          | iteration_stmt
   26          | return_stmt

   27 expression_stmt: expression SEMI
   28                | SEMI

   29 selection_stmt: If LPAREN expression RPAREN statement
   30               | If LPAREN expression RPAREN statement ELSE statement

   31 iteration_stmt: While LPAREN expression RPAREN statement

   32 return_stmt: Return SEMI
   33            | Return expression SEMI

   34 expression: var ASSIGN expression
   35           | simple_expression

   36 var: id
   37    | id LBRACE expression RBRACE

   38 simple_expression: additive_expression relop additive_expression
   39                  | additive_expression

   40 relop: LE
   41      | LT
   42      | GT
   43      | GE
   44      | EQ
   45      | NE

   46 additive_expression: additive_expression addop term
   47                    | term

   48 addop: PLUS
   49      | MINUS

   50 term: term mulop factor
   51     | factor

   52 mulop: TIMES
   53      | OVER

   54 factor: LPAREN expression RPAREN
   55       | var
   56       | call
   57       | num

   58 call: id LPAREN args RPAREN

   59 args: arg_list
   60     | %empty

   61 arg_list: arg_list COMMA expression
   62         | expression

   63 id: ID

   64 num: NUM

   65 lcurly: LCURLY

   66 If: IF

   67 While: WHILE

   68 Return: RETURN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SEMI (258) 6 7 27 28 32 33
    COMMA (259) 13 61
    ASSIGN (260) 34
    EQ (261) 44
    NE (262) 45
    LT (263) 41
    LE (264) 40
    GT (265) 42
    GE (266) 43
    PLUS (267) 48
    MINUS (268) 49
    TIMES (269) 52
    OVER (270) 53
    LPAREN (271) 10 29 30 31 54 58
    LCURLY (272) 65
    LBRACE (273) 7 16 37
    RCURLY (274) 17
    RBRACE (275) 7 16 37
    ID (276) 63
    NUM (277) 64
    INT (278) 8
    IF (279) 66
    VOID (280) 9 12
    WHILE (281) 67
    RETURN (282) 68
    RPAREN (283) 10 29 30 31 54 58
    ELSE (284) 30
    ERROR (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    declaration_list (33)
        on left: 2 3
        on right: 1 2
    declaration (34)
        on left: 4 5
        on right: 2 3
    var_declaration (35)
        on left: 6 7
        on right: 4 18
    type_specifier (36)
        on left: 8 9
        on right: 6 7 10 15 16
    func_declaration (37)
        on left: 10
        on right: 5
    params (38)
        on left: 11 12
        on right: 10
    param_list (39)
        on left: 13 14
        on right: 11 13
    param (40)
        on left: 15 16
        on right: 13 14
    compound_stmt (41)
        on left: 17
        on right: 10 23
    local_declarations (42)
        on left: 18 19
        on right: 17 18
    statement_list (43)
        on left: 20 21
        on right: 17 20
    statement (44)
        on left: 22 23 24 25 26
        on right: 20 29 30 31
    expression_stmt (45)
        on left: 27 28
        on right: 22
    selection_stmt (46)
        on left: 29 30
        on right: 24
    iteration_stmt (47)
        on left: 31
        on right: 25
    return_stmt (48)
        on left: 32 33
        on right: 26
    expression (49)
        on left: 34 35
        on right: 27 29 30 31 33 34 37 54 61 62
    var (50)
        on left: 36 37
        on right: 34 55
    simple_expression (51)
        on left: 38 39
        on right: 35
    relop (52)
        on left: 40 41 42 43 44 45
        on right: 38
    additive_expression (53)
        on left: 46 47
        on right: 38 39 46
    addop (54)
        on left: 48 49
        on right: 46
    term (55)
        on left: 50 51
        on right: 46 47 50
    mulop (56)
        on left: 52 53
        on right: 50
    factor (57)
        on left: 54 55 56 57
        on right: 50 51
    call (58)
        on left: 58
        on right: 56
    args (59)
        on left: 59 60
        on right: 58
    arg_list (60)
        on left: 61 62
        on right: 59 61
    id (61)
        on left: 63
        on right: 6 7 10 15 16 36 37 58
    num (62)
        on left: 64
        on right: 7 57
    lcurly (63)
        on left: 65
        on right: 17
    If (64)
        on left: 66
        on right: 29 30
    While (65)
        on left: 67
        on right: 31
    Return (66)
        on left: 68
        on right: 32 33


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


State 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration       go to state 10
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LBRACE num RBRACE SEMI
   10 func_declaration: type_specifier . id LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    id  go to state 12


State 8

    5 declaration: func_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

   63 id: ID .

    $default  reduce using rule 63 (id)


State 12

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LBRACE num RBRACE SEMI
   10 func_declaration: type_specifier id . LPAREN params RPAREN compound_stmt

    SEMI    shift, and go to state 13
    LPAREN  shift, and go to state 14
    LBRACE  shift, and go to state 15


State 13

    6 var_declaration: type_specifier id SEMI .

    $default  reduce using rule 6 (var_declaration)


State 14

   10 func_declaration: type_specifier id LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    type_specifier  go to state 17
    params          go to state 18
    param_list      go to state 19
    param           go to state 20


State 15

    7 var_declaration: type_specifier id LBRACE . num RBRACE SEMI

    NUM  shift, and go to state 21

    num  go to state 22


State 16

    9 type_specifier: VOID .
   12 params: VOID .

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 17

   15 param: type_specifier . id
   16      | type_specifier . id LBRACE RBRACE

    ID  shift, and go to state 11

    id  go to state 23


State 18

   10 func_declaration: type_specifier id LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 24


State 19

   11 params: param_list .
   13 param_list: param_list . COMMA param

    COMMA  shift, and go to state 25

    $default  reduce using rule 11 (params)


State 20

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 21

   64 num: NUM .

    $default  reduce using rule 64 (num)


State 22

    7 var_declaration: type_specifier id LBRACE num . RBRACE SEMI

    RBRACE  shift, and go to state 26


State 23

   15 param: type_specifier id .
   16      | type_specifier id . LBRACE RBRACE

    LBRACE  shift, and go to state 27

    $default  reduce using rule 15 (param)


State 24

   10 func_declaration: type_specifier id LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 28

    compound_stmt  go to state 29
    lcurly         go to state 30


State 25

   13 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 17
    param           go to state 31


State 26

    7 var_declaration: type_specifier id LBRACE num RBRACE . SEMI

    SEMI  shift, and go to state 32


State 27

   16 param: type_specifier id LBRACE . RBRACE

    RBRACE  shift, and go to state 33


State 28

   65 lcurly: LCURLY .

    $default  reduce using rule 65 (lcurly)


State 29

   10 func_declaration: type_specifier id LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 10 (func_declaration)


State 30

   17 compound_stmt: lcurly . local_declarations statement_list RCURLY

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 34


State 31

   13 param_list: param_list COMMA param .

    $default  reduce using rule 13 (param_list)


State 32

    7 var_declaration: type_specifier id LBRACE num RBRACE SEMI .

    $default  reduce using rule 7 (var_declaration)


State 33

   16 param: type_specifier id LBRACE RBRACE .

    $default  reduce using rule 16 (param)


State 34

   17 compound_stmt: lcurly local_declarations . statement_list RCURLY
   18 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 35
    type_specifier   go to state 36
    statement_list   go to state 37


State 35

   18 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 18 (local_declarations)


State 36

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LBRACE num RBRACE SEMI

    ID  shift, and go to state 11

    id  go to state 38


State 37

   17 compound_stmt: lcurly local_declarations statement_list . RCURLY
   20 statement_list: statement_list . statement

    SEMI    shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 28
    RCURLY  shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 46
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59
    lcurly               go to state 30
    If                   go to state 60
    While                go to state 61
    Return               go to state 62


State 38

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LBRACE num RBRACE SEMI

    SEMI    shift, and go to state 13
    LBRACE  shift, and go to state 15


State 39

   28 expression_stmt: SEMI .

    $default  reduce using rule 28 (expression_stmt)


State 40

   54 factor: LPAREN . expression RPAREN

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    expression           go to state 63
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 41

   17 compound_stmt: lcurly local_declarations statement_list RCURLY .

    $default  reduce using rule 17 (compound_stmt)


State 42

   66 If: IF .

    $default  reduce using rule 66 (If)


State 43

   67 While: WHILE .

    $default  reduce using rule 67 (While)


State 44

   68 Return: RETURN .

    $default  reduce using rule 68 (Return)


State 45

   23 statement: compound_stmt .

    $default  reduce using rule 23 (statement)


State 46

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 47

   22 statement: expression_stmt .

    $default  reduce using rule 22 (statement)


State 48

   24 statement: selection_stmt .

    $default  reduce using rule 24 (statement)


State 49

   25 statement: iteration_stmt .

    $default  reduce using rule 25 (statement)


State 50

   26 statement: return_stmt .

    $default  reduce using rule 26 (statement)


State 51

   27 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 64


State 52

   34 expression: var . ASSIGN expression
   55 factor: var .

    ASSIGN  shift, and go to state 65

    $default  reduce using rule 55 (factor)


State 53

   35 expression: simple_expression .

    $default  reduce using rule 35 (expression)


State 54

   38 simple_expression: additive_expression . relop additive_expression
   39                  | additive_expression .
   46 additive_expression: additive_expression . addop term

    EQ     shift, and go to state 66
    NE     shift, and go to state 67
    LT     shift, and go to state 68
    LE     shift, and go to state 69
    GT     shift, and go to state 70
    GE     shift, and go to state 71
    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73

    $default  reduce using rule 39 (simple_expression)

    relop  go to state 74
    addop  go to state 75


State 55

   47 additive_expression: term .
   50 term: term . mulop factor

    TIMES  shift, and go to state 76
    OVER   shift, and go to state 77

    $default  reduce using rule 47 (additive_expression)

    mulop  go to state 78


State 56

   51 term: factor .

    $default  reduce using rule 51 (term)


State 57

   56 factor: call .

    $default  reduce using rule 56 (factor)


State 58

   36 var: id .
   37    | id . LBRACE expression RBRACE
   58 call: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 79
    LBRACE  shift, and go to state 80

    $default  reduce using rule 36 (var)


State 59

   57 factor: num .

    $default  reduce using rule 57 (factor)


State 60

   29 selection_stmt: If . LPAREN expression RPAREN statement
   30               | If . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 81


State 61

   31 iteration_stmt: While . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 82


State 62

   32 return_stmt: Return . SEMI
   33            | Return . expression SEMI

    SEMI    shift, and go to state 83
    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    expression           go to state 84
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 63

   54 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 85


State 64

   27 expression_stmt: expression SEMI .

    $default  reduce using rule 27 (expression_stmt)


State 65

   34 expression: var ASSIGN . expression

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    expression           go to state 86
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 66

   44 relop: EQ .

    $default  reduce using rule 44 (relop)


State 67

   45 relop: NE .

    $default  reduce using rule 45 (relop)


State 68

   41 relop: LT .

    $default  reduce using rule 41 (relop)


State 69

   40 relop: LE .

    $default  reduce using rule 40 (relop)


State 70

   42 relop: GT .

    $default  reduce using rule 42 (relop)


State 71

   43 relop: GE .

    $default  reduce using rule 43 (relop)


State 72

   48 addop: PLUS .

    $default  reduce using rule 48 (addop)


State 73

   49 addop: MINUS .

    $default  reduce using rule 49 (addop)


State 74

   38 simple_expression: additive_expression relop . additive_expression

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    var                  go to state 87
    additive_expression  go to state 88
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 75

   46 additive_expression: additive_expression addop . term

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    var     go to state 87
    term    go to state 89
    factor  go to state 56
    call    go to state 57
    id      go to state 58
    num     go to state 59


State 76

   52 mulop: TIMES .

    $default  reduce using rule 52 (mulop)


State 77

   53 mulop: OVER .

    $default  reduce using rule 53 (mulop)


State 78

   50 term: term mulop . factor

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    var     go to state 87
    factor  go to state 90
    call    go to state 57
    id      go to state 58
    num     go to state 59


State 79

   58 call: id LPAREN . args RPAREN

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    $default  reduce using rule 60 (args)

    expression           go to state 91
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    args                 go to state 92
    arg_list             go to state 93
    id                   go to state 58
    num                  go to state 59


State 80

   37 var: id LBRACE . expression RBRACE

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    expression           go to state 94
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 81

   29 selection_stmt: If LPAREN . expression RPAREN statement
   30               | If LPAREN . expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    expression           go to state 95
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 82

   31 iteration_stmt: While LPAREN . expression RPAREN statement

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    expression           go to state 96
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 83

   32 return_stmt: Return SEMI .

    $default  reduce using rule 32 (return_stmt)


State 84

   33 return_stmt: Return expression . SEMI

    SEMI  shift, and go to state 97


State 85

   54 factor: LPAREN expression RPAREN .

    $default  reduce using rule 54 (factor)


State 86

   34 expression: var ASSIGN expression .

    $default  reduce using rule 34 (expression)


State 87

   55 factor: var .

    $default  reduce using rule 55 (factor)


State 88

   38 simple_expression: additive_expression relop additive_expression .
   46 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73

    $default  reduce using rule 38 (simple_expression)

    addop  go to state 75


State 89

   46 additive_expression: additive_expression addop term .
   50 term: term . mulop factor

    TIMES  shift, and go to state 76
    OVER   shift, and go to state 77

    $default  reduce using rule 46 (additive_expression)

    mulop  go to state 78


State 90

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


State 91

   62 arg_list: expression .

    $default  reduce using rule 62 (arg_list)


State 92

   58 call: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 98


State 93

   59 args: arg_list .
   61 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 99

    $default  reduce using rule 59 (args)


State 94

   37 var: id LBRACE expression . RBRACE

    RBRACE  shift, and go to state 100


State 95

   29 selection_stmt: If LPAREN expression . RPAREN statement
   30               | If LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 101


State 96

   31 iteration_stmt: While LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 102


State 97

   33 return_stmt: Return expression SEMI .

    $default  reduce using rule 33 (return_stmt)


State 98

   58 call: id LPAREN args RPAREN .

    $default  reduce using rule 58 (call)


State 99

   61 arg_list: arg_list COMMA . expression

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21

    expression           go to state 103
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 100

   37 var: id LBRACE expression RBRACE .

    $default  reduce using rule 37 (var)


State 101

   29 selection_stmt: If LPAREN expression RPAREN . statement
   30               | If LPAREN expression RPAREN . statement ELSE statement

    SEMI    shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 28
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 104
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59
    lcurly               go to state 30
    If                   go to state 60
    While                go to state 61
    Return               go to state 62


State 102

   31 iteration_stmt: While LPAREN expression RPAREN . statement

    SEMI    shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 28
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 105
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59
    lcurly               go to state 30
    If                   go to state 60
    While                go to state 61
    Return               go to state 62


State 103

   61 arg_list: arg_list COMMA expression .

    $default  reduce using rule 61 (arg_list)


State 104

   29 selection_stmt: If LPAREN expression RPAREN statement .
   30               | If LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 106

    $default  reduce using rule 29 (selection_stmt)


State 105

   31 iteration_stmt: While LPAREN expression RPAREN statement .

    $default  reduce using rule 31 (iteration_stmt)


State 106

   30 selection_stmt: If LPAREN expression RPAREN statement ELSE . statement

    SEMI    shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 28
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 107
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59
    lcurly               go to state 30
    If                   go to state 60
    While                go to state 61
    Return               go to state 62


State 107

   30 selection_stmt: If LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 30 (selection_stmt)
